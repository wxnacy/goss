!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCEPT	goss/github.py	/^ACCEPT = 'application\/vnd.github.v3+json'$/;"	v
API_GITHUB	goss/models.py	/^    API_GITHUB = 'api_github'$/;"	v	class:Module
API_URL	goss/github.py	/^API_URL = 'https:\/\/api.github.com{}'$/;"	v
AUTHOR	setup.py	/^AUTHOR = 'wxnacy'$/;"	v
Action	goss/argument/file.py	/^from csarg import Action$/;"	i
Action	goss/argument/login.py	/^from csarg import Action$/;"	i
ArgumentParser	goss/argument/default.py	/^from csarg import ArgumentParser$/;"	i
Author	goss/github.py	/^class Author():$/;"	c
AutoSuggestFromHistory	goss/cli/shell.py	/^from prompt_toolkit.auto_suggest import AutoSuggestFromHistory$/;"	i
BaseEnum	goss/cli/run_mode.py	/^from wpy.base import BaseEnum$/;"	i
BaseEnum	goss/config.py	/^from wpy.base import BaseEnum$/;"	i
BaseObject	goss/github.py	/^class BaseObject(object):$/;"	c
COMMAND	goss/cli/run_mode.py	/^    COMMAND = 'command'$/;"	v	class:ModeEnum
CONFIG_PATH	goss/common/constants.py	/^    CONFIG_PATH = os.path.join(get_current_module_path(),$/;"	v	class:Constants
CONFIG_PATH	goss/constants.py	/^    CONFIG_PATH = os.path.join(get_current_module_path(),$/;"	v	class:Constants
CREATE_CONTENT	goss/models.py	/^    CREATE_CONTENT = 'create_content'$/;"	v	class:Request
CREDENTIALS_PATH	goss/constants.py	/^    CREDENTIALS_PATH = os.path.expanduser('~\/.goss-credentials')$/;"	v	class:Constants
CmdArgumentParser	goss/argument/__init__.py	/^from .command import CmdArgumentParser$/;"	i
CmdArgumentParser	goss/argument/command.py	/^class CmdArgumentParser(CommandArgumentParser):$/;"	c
CmdArgumentParser	goss/argument/file.py	/^from .command import CmdArgumentParser$/;"	i
CmdArgumentParser	goss/argument/login.py	/^from .command import CmdArgumentParser$/;"	i
CmdArgumentParser	goss/argument/shell.py	/^from .command import CmdArgumentParser$/;"	i
CmdArgumentParser	goss/cli/command.py	/^from goss.argument.command import CmdArgumentParser$/;"	i
Command	goss/cli/command.py	/^class Command(object):$/;"	c
Command	setup.py	/^from setuptools import find_packages, setup, Command$/;"	i
CommandArgumentParser	goss/argument/command.py	/^from csarg import CommandArgumentParser$/;"	i
CommandArgumentParser	goss/cli/shell.py	/^from csarg import CommandArgumentParser$/;"	i
CommandArgumentParserFactory	goss/argument/command.py	/^class CommandArgumentParserFactory(CommandArgumentParserFactory):$/;"	c
CommandArgumentParserFactory	goss/argument/command.py	/^from csarg import CommandArgumentParserFactory$/;"	i
CommandArgumentParserFactory	goss/argument/file.py	/^from .command import CommandArgumentParserFactory$/;"	i
CommandArgumentParserFactory	goss/argument/login.py	/^from .command import CommandArgumentParserFactory$/;"	i
CommandArgumentParserFactory	goss/cli/command.py	/^from csarg import CommandArgumentParserFactory$/;"	i
CommandArgumentParserFactory	goss/cli/shell.py	/^from csarg import CommandArgumentParserFactory$/;"	i
CommandCompleter	goss/cli/shell.py	/^from wush.completion.command import CommandCompleter$/;"	i
CommnadNotFoundException	goss/cli/shell.py	/^class CommnadNotFoundException(Exception):$/;"	c
Config	goss/app/config.py	/^class Config():$/;"	c
ConfigParser	goss/app/config.py	/^class ConfigParser():$/;"	c
ConfigParser	goss/github.py	/^from goss.app.config import ConfigParser$/;"	i
Constants	goss/argument/login.py	/^from goss.constants import Constants$/;"	i
Constants	goss/cli/shell.py	/^from wush.common.constants import Constants$/;"	i
Constants	goss/common/constants.py	/^class Constants(object):$/;"	c
Constants	goss/config.py	/^from .constants import Constants$/;"	i
Constants	goss/constants.py	/^class Constants(object):$/;"	c
Constants	goss/models.py	/^from .constants import Constants$/;"	i
ContinueException	goss/cli/shell.py	/^class ContinueException(Exception):$/;"	c
CustomerFilter	goss/loggers.py	/^class CustomerFilter(logging.Filter):$/;"	c
DELETE_CONTENT	goss/models.py	/^    DELETE_CONTENT = 'delete_content'$/;"	v	class:Request
DESCRIPTION	setup.py	/^DESCRIPTION = 'Github Object Storage'$/;"	v
DefaultArgumentParser	goss/argument/default.py	/^class DefaultArgumentParser(ArgumentParser):$/;"	c
EMAIL	setup.py	/^EMAIL = 'wxnacy@gmail.com'$/;"	v
EXTRAS	setup.py	/^EXTRAS = {$/;"	v
FileArgumentParser	goss/argument/__init__.py	/^from .file import FileArgumentParser$/;"	i
FileArgumentParser	goss/argument/file.py	/^class FileArgumentParser(CmdArgumentParser):$/;"	c
FileHistory	goss/cli/shell.py	/^from prompt_toolkit.history import FileHistory$/;"	i
Flask	goss/cli/server.py	/^from flask import Flask$/;"	i
FunctionFactory	goss/function.py	/^from wush.config.function import FunctionFactory$/;"	i
GET_CONTENT	goss/models.py	/^    GET_CONTENT = 'get_content'$/;"	v	class:Request
GITHUB	goss/config.py	/^    GITHUB = 'github'$/;"	v	class:GitTypeEnum
GOSS_CONFIG_HOME	goss/app/run.py	/^GOSS_CONFIG_HOME = '{}\/.config\/goss'.format(os.getenv("HOME"))$/;"	v
GOSS_CONFIG_HOME	goss/app/utils.py	/^GOSS_CONFIG_HOME = '{}\/.config\/goss'.format(os.getenv("HOME"))$/;"	v
GOSS_CONFIG_PATH	goss/app/run.py	/^GOSS_CONFIG_PATH = '{}\/config'.format(GOSS_CONFIG_HOME)$/;"	v
GOSS_CONFIG_PATH	goss/app/utils.py	/^GOSS_CONFIG_PATH = '{}\/config'.format(GOSS_CONFIG_HOME)$/;"	v
GOSS_CREDENTIAL_PATH	goss/app/run.py	/^GOSS_CREDENTIAL_PATH = '{}\/credentials'.format(GOSS_CONFIG_HOME)$/;"	v
GOSS_CREDENTIAL_PATH	goss/app/utils.py	/^GOSS_CREDENTIAL_PATH = '{}\/credentials'.format(GOSS_CONFIG_HOME)$/;"	v
GOSS_USER_INFO_PATH	goss/app/run.py	/^GOSS_USER_INFO_PATH = '{}\/user.json'.format(GOSS_CONFIG_HOME)$/;"	v
Git	goss/git/__init__.py	/^from .git import Git$/;"	i
Git	goss/git/git.py	/^class Git(object):$/;"	c
Git	goss/git/github.py	/^from goss.git import Git$/;"	i
Git	tests/git/test_git.py	/^from goss.git import Git$/;"	i
GitException	goss/git/exceptions.py	/^class GitException(Exception):$/;"	c
GitException	goss/git/git.py	/^from .exceptions import GitException$/;"	i
GitException	tests/git/test_git.py	/^from goss.git.exceptions import GitException$/;"	i
GitTypeEnum	goss/config.py	/^class GitTypeEnum(BaseEnum):$/;"	c
GitTypeEnum	goss/function.py	/^from .config import GitTypeEnum$/;"	i
Github	goss/app/release.py	/^from goss import Github$/;"	i
Github	goss/app/run.py	/^from goss import Github$/;"	i
Github	goss/app/upload_file.py	/^from goss import Github$/;"	i
Github	goss/argument/file.py	/^from goss.models import Github$/;"	i
Github	goss/argument/login.py	/^from goss.models import Github$/;"	i
Github	goss/cli/server.py	/^from goss.models import Github$/;"	i
Github	goss/git/__init__.py	/^from .github import Github$/;"	i
Github	goss/git/github.py	/^class Github(Git):$/;"	c
Github	goss/github.py	/^class Github():$/;"	c
Github	goss/models.py	/^class Github(object):$/;"	c
Github	tests/git/test_git.py	/^from goss.git import Github$/;"	i
HTTPBasicAuth	goss/github.py	/^from requests.auth import HTTPBasicAuth$/;"	i
LARGE_SIZE	goss/app/run.py	/^LARGE_SIZE = 1 * 1024 * 1024$/;"	v
LOGFILE	goss/loggers.py	/^LOGFILE = '\/tmp\/goss.log'$/;"	v
Logger	goss/app/logger.py	/^class Logger():$/;"	c
Logger	goss/app/release.py	/^from goss.app.logger import Logger$/;"	i
Logger	goss/app/run.py	/^from goss.app.logger import Logger$/;"	i
Logger	goss/app/upload_file.py	/^from goss.app.logger import Logger$/;"	i
Logger	goss/github.py	/^from goss.app.logger import Logger$/;"	i
LoginArgumentParser	goss/argument/__init__.py	/^from .login import LoginArgumentParser$/;"	i
LoginArgumentParser	goss/argument/login.py	/^class LoginArgumentParser(CmdArgumentParser):$/;"	c
MODULE_PATH	goss/common/constants.py	/^MODULE_PATH = goss.__path__[0]$/;"	v
ModeEnum	goss/cli/run_mode.py	/^class ModeEnum(BaseEnum):$/;"	c
Module	goss/models.py	/^class Module():$/;"	c
NAME	setup.py	/^NAME = 'goss'$/;"	v
OAUTH_ACCESS_TOKEN	goss/models.py	/^    OAUTH_ACCESS_TOKEN = 'oauth_access_token'$/;"	v	class:Request
OAUTH_AUTHORIZE	goss/models.py	/^    OAUTH_AUTHORIZE = 'oauth_authorize'$/;"	v	class:Request
Progress	goss/app/utils.py	/^class Progress():$/;"	c
PromptSession	goss/cli/shell.py	/^from prompt_toolkit import PromptSession$/;"	i
PygmentsTokens	goss/argument/command.py	/^from prompt_toolkit.formatted_text import PygmentsTokens$/;"	i
PygmentsTokens	goss/cli/shell.py	/^from prompt_toolkit.formatted_text import PygmentsTokens$/;"	i
PythonLexer	goss/argument/command.py	/^from pygments.lexers.python import PythonLexer$/;"	i
PythonLexer	goss/cli/shell.py	/^from pygments.lexers.python import PythonLexer$/;"	i
REQUIRED	setup.py	/^REQUIRED = [$/;"	v
RE_CHINESE	goss/app/utils.py	/^RE_CHINESE = re.compile(u"[\\u4e00-\\u9fa5]+")  # 正则查找中文$/;"	v
RUN_MODE	goss/argument/command.py	/^from goss.cli.run_mode import RUN_MODE$/;"	i
RUN_MODE	goss/cli/command.py	/^from goss.cli.run_mode import RUN_MODE$/;"	i
RUN_MODE	goss/cli/run_mode.py	/^RUN_MODE = RunMode()$/;"	v
RUN_MODE	goss/cli/shell.py	/^from .run_mode import RUN_MODE$/;"	i
Release	goss/github.py	/^class Release(Github):$/;"	c
Request	goss/models.py	/^class Request():$/;"	c
Response	goss/github.py	/^class Response(BaseObject):$/;"	c
RunMode	goss/cli/run_mode.py	/^class RunMode(object):$/;"	c
SHELL	goss/cli/run_mode.py	/^    SHELL = 'shell'$/;"	v	class:ModeEnum
Section	goss/app/config.py	/^    class Section():$/;"	c	class:ConfigParser
Shell	goss/argument/shell.py	/^from goss.cli.shell import Shell$/;"	i
Shell	goss/cli/shell.py	/^class Shell():$/;"	c
ShellArgumentParser	goss/argument/shell.py	/^class ShellArgumentParser(CmdArgumentParser):$/;"	c
TOO_LARGE_SIZE	goss/app/run.py	/^TOO_LARGE_SIZE = 100 * 1024 * 1024$/;"	v
TestMain	goss/app/test_utils.py	/^class TestMain(unittest.TestCase):$/;"	c
URL	setup.py	/^URL = 'https:\/\/github.com\/wxnacy\/goss'$/;"	v
UploadCommand	setup.py	/^class UploadCommand(Command):$/;"	c
VERSION	goss/__version__.py	/^VERSION = (0, 2, 0, 0)$/;"	v
VERSION	setup.py	/^VERSION = None$/;"	v
WAPI_CONFIG_ROOT	goss/common/constants.py	/^WAPI_CONFIG_ROOT = os.path.join(MODULE_PATH, 'resources\/config')$/;"	v
WWW_GITHUB	goss/models.py	/^    WWW_GITHUB = 'www_github'$/;"	v	class:Module
Wapi	goss/git/github.py	/^from wapi import Wapi$/;"	i
__all__	goss/argument/__init__.py	/^__all__ = [$/;"	v
__all__	goss/argument/shell.py	/^__all__ = ['ShellArgumentParser']$/;"	v
__all__	goss/cli/command.py	/^__all__ = ['Command']$/;"	v
__all__	goss/git/__init__.py	/^__all__ = ['Git', 'Github']$/;"	v
__getattr__	goss/app/config.py	/^        def __getattr__(self, name):$/;"	m	class:ConfigParser.Section	file:
__getattr__	goss/app/config.py	/^    def __getattr__(self, name):$/;"	m	class:ConfigParser	file:
__init__	goss/app/config.py	/^        def __init__(self, sec={}):$/;"	m	class:ConfigParser.Section
__init__	goss/app/config.py	/^    def __init__(self, *filenames):$/;"	m	class:ConfigParser
__init__	goss/app/config.py	/^    def __init__(self, filename=None):$/;"	m	class:Config
__init__	goss/app/logger.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Logger
__init__	goss/argument/command.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:CmdArgumentParser
__init__	goss/cli/command.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Command
__init__	goss/cli/shell.py	/^    def __init__(self):$/;"	m	class:Shell
__init__	goss/git/git.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Git
__init__	goss/git/github.py	/^    def __init__(self, owner, repo=None, *args, **kwargs):$/;"	m	class:Github
__init__	goss/github.py	/^    def __init__(self):$/;"	m	class:Response
__init__	goss/github.py	/^    def __init__(self, **kwargs):$/;"	m	class:BaseObject
__init__	goss/github.py	/^    def __init__(self, github, *args, **kwargs):$/;"	m	class:Release
__init__	goss/github.py	/^    def __init__(self, name, email):$/;"	m	class:Author
__init__	goss/github.py	/^    def __init__(self, user, password, **kwargs):$/;"	m	class:Github
__init__	goss/models.py	/^    def __init__(self, owner=None, repo=None):$/;"	m	class:Github
__str__	goss/github.py	/^    def __str__(self):$/;"	m	class:BaseObject	file:
__version__	goss/__version__.py	/^__version__ = '.'.join(map(str, VERSION))$/;"	v
__version__	goss/app/release.py	/^from goss import __version__$/;"	i
__version__	goss/app/run.py	/^from goss import __version__$/;"	i
_create_file	goss/github.py	/^    def _create_file(self, owner, repository, filepath, byte_data,$/;"	m	class:Github
_del_file	goss/app/run.py	/^    def _del_file(path, sha):$/;"	f	function:file
_dict_to_completions	goss/argument/file.py	/^    def _dict_to_completions(self, data):$/;"	m	class:FileArgumentParser
_dict_to_completions	goss/argument/login.py	/^    def _dict_to_completions(self, data):$/;"	m	class:LoginArgumentParser
_end_run	goss/cli/shell.py	/^    def _end_run(self):$/;"	m	class:Shell
_exit	goss/cli/shell.py	/^    def _exit(self, text):$/;"	m	class:Shell
_fmt_url	goss/git/git.py	/^    def _fmt_url(cls, path):$/;"	m	class:Git
_get	goss/app/run.py	/^    def _get():$/;"	f	function:release
_get	goss/git/git.py	/^    def _get(cls, path):$/;"	m	class:Git
_get_parser	goss/cli/shell.py	/^    def _get_parser(self, cmd=None):$/;"	m	class:Shell
_mode	goss/cli/run_mode.py	/^    _mode = None$/;"	v	class:RunMode
_module	goss/common/utils.py	/^    import goss as _module$/;"	i
_module	goss/utils.py	/^    import goss as _module$/;"	i
_print	goss/argument/command.py	/^    def _print(self, text):$/;"	m	class:CmdArgumentParser
_print	goss/cli/shell.py	/^    def _print(self, text):$/;"	m	class:Shell
_print_file_list	goss/app/run.py	/^    def _print_file_list(lines):$/;"	f	function:file
_prompt_default	goss/cli/shell.py	/^    _prompt_default = ''$/;"	v	class:Shell
_request	goss/git/git.py	/^    def _request(cls, method, url, proxies=None):$/;"	m	class:Git
_request	goss/github.py	/^    def _request(self, method, url, **kw):$/;"	m	class:Github
_run_base_cmd	goss/cli/shell.py	/^    def _run_base_cmd(self, text):$/;"	m	class:Shell
_run_once_time	goss/cli/shell.py	/^    def _run_once_time(self, text):$/;"	m	class:Shell
_run_shell	goss/cli/shell.py	/^    def _run_shell(self):$/;"	m	class:Shell
_upload_asset	goss/app/upload_file.py	/^    def _upload_asset():$/;"	f	function:create
_wrapper	goss/github.py	/^    def _wrapper(*args, **kwargs):$/;"	f	function:github_credential
_wush_params	goss/models.py	/^_wush_params = { "config": Constants.CONFIG_PATH }$/;"	v
about	setup.py	/^about = {}$/;"	v
app	goss/cli/server.py	/^app = Flask(__name__)$/;"	v
author	goss/github.py	/^    author = config['user']$/;"	v	class:Release
author	goss/github.py	/^    def author(self):$/;"	m	class:Github
author	setup.py	/^    author=AUTHOR,$/;"	v
author_email	setup.py	/^    author_email=EMAIL,$/;"	v
base64	goss/app/release.py	/^import base64$/;"	i
base64	goss/app/run.py	/^import base64$/;"	i
base64	goss/github.py	/^import base64$/;"	i
base64	goss/models.py	/^import base64$/;"	i
c	goss/app/config.py	/^    c = ConfigParser('\/Users\/wxnacy\/.config\/goss\/credentials',$/;"	v	class:ConfigParser
charepr	goss/app/utils.py	/^def charepr(s, width=30):$/;"	f
charlen	goss/app/utils.py	/^def charlen(s):$/;"	f
charljust	goss/app/utils.py	/^def charljust(s, width, fullchar=' '):$/;"	f
classifiers	setup.py	/^    classifiers=[$/;"	v
click	goss/app/logger.py	/^import click$/;"	i
click	goss/app/release.py	/^import click$/;"	i
click	goss/app/run.py	/^import click$/;"	i
click	goss/app/upload_file.py	/^import click$/;"	i
click	goss/app/utils.py	/^import click$/;"	i
click	tests/test_click.py	/^import click$/;"	i
clock	goss/cli/shell.py	/^from wpy.functools import clock$/;"	i
cmd	goss/argument/default.py	/^    cmd = 'default'$/;"	v	class:DefaultArgumentParser
cmd	goss/argument/file.py	/^    cmd = 'file'$/;"	v	class:FileArgumentParser
cmd	goss/argument/login.py	/^    cmd = 'login'$/;"	v	class:LoginArgumentParser
cmd	goss/argument/shell.py	/^    cmd = 'shell'$/;"	v	class:ShellArgumentParser
cmdclass	setup.py	/^    cmdclass={$/;"	v
colored	goss/app/logger.py	/^from termcolor import colored$/;"	i
config	goss/app/run.py	/^def config(ctx, name, value):$/;"	f
config	goss/app/utils.py	/^def config(filepath, section, **data):$/;"	f
config	goss/github.py	/^    config = configparser.ConfigParser()$/;"	v	class:Release
config	goss/github.py	/^    def config(self):$/;"	m	class:Github
config_path	goss/github.py	/^    config_path = '{}\/.config\/gos\/config'.format(os.getenv("HOME"))$/;"	v	class:Release
configparser	goss/app/config.py	/^import configparser$/;"	i
configparser	goss/app/release.py	/^import configparser$/;"	i
configparser	goss/app/run.py	/^import configparser$/;"	i
configparser	goss/app/test_utils.py	/^import configparser$/;"	i
configparser	goss/app/upload_file.py	/^import configparser$/;"	i
configparser	goss/app/utils.py	/^import configparser$/;"	i
configparser	goss/github.py	/^import configparser$/;"	i
confirm	goss/argument/file.py	/^    def confirm(self, message):$/;"	m	class:FileArgumentParser
confirm_replace	goss/argument/file.py	/^    def confirm_replace(self):$/;"	m	class:FileArgumentParser
constants	goss/git/github.py	/^from goss.common import constants$/;"	i
convert_argparse	goss/cli/command.py	/^    def convert_argparse(self, cmd):$/;"	m	class:Command
create	goss/app/upload_file.py	/^def create(g, filepath, path=None, repo=None, yes=False, **kw):$/;"	f
create_file	goss/models.py	/^    def create_file(self, path, content=None, message='', filepath=None,$/;"	m	class:Github
create_file_from_path	goss/github.py	/^    def create_file_from_path(self, owner, repository, filepath, path=None, sha=None):$/;"	m	class:Github
create_file_from_url	goss/github.py	/^    def create_file_from_url(self, owner, repository, url, path=None, sha=None):$/;"	m	class:Github
create_logger	goss/cli/shell.py	/^from wush.common.loggers import create_logger$/;"	i
create_organization_repository	goss/github.py	/^    def create_organization_repository(self, organization, name,$/;"	m	class:Github
create_release	goss/github.py	/^    def create_release(self,owner, repo, tag_name, name="", body="",$/;"	m	class:Release
create_repository	goss/github.py	/^    def create_repository(self, name, description="", homepage="",$/;"	m	class:Github
credential	goss/github.py	/^    credential = configparser.ConfigParser()$/;"	v	class:Release
credential_path	goss/github.py	/^    credential_path = '{}\/.config\/gos\/credentials'.format(os.getenv("HOME"))$/;"	v	class:Release
debug	goss/app/logger.py	/^    def debug(self, *msg, with_color=False):$/;"	m	class:Logger
debug	goss/github.py	/^    debug = False$/;"	v	class:Github
default	goss/argument/default.py	/^    def default(cls):$/;"	m	class:DefaultArgumentParser
default	goss/argument/file.py	/^    def default(cls):$/;"	m	class:FileArgumentParser
default	goss/argument/login.py	/^    def default(cls):$/;"	m	class:LoginArgumentParser
default	goss/argument/shell.py	/^    def default(cls):$/;"	m	class:ShellArgumentParser
default_cred	goss/github.py	/^    default_cred = credential['default']$/;"	v	class:Release
delete_asset	goss/github.py	/^    def delete_asset(self, owner, repo, asset_id):$/;"	m	class:Release
delete_file	goss/github.py	/^    def delete_file(self, owner, repository, path, sha, branch='master'):$/;"	m	class:Github
delete_file	goss/models.py	/^    def delete_file(self, path, sha, message=''):$/;"	m	class:Github
delete_release	goss/github.py	/^    def delete_release(self, owner, repo, release_id):$/;"	m	class:Release
delete_repository	goss/github.py	/^    def delete_repository(self, owner, repo):$/;"	m	class:Github
description	setup.py	/^    description = 'Build and publish the package.'$/;"	v	class:UploadCommand
description	setup.py	/^    description=DESCRIPTION,$/;"	v
do	goss/app/test_utils.py	/^    def do(self, func):$/;"	m	class:TestMain
domain	goss/git/git.py	/^    domain = None$/;"	v	class:Git
domain	goss/git/github.py	/^    domain = 'api.github.com'$/;"	v	class:Github
echo	goss/argument/file.py	/^from wpy import echo$/;"	i
echo	goss/argument/login.py	/^from wpy import echo$/;"	i
entry_points	setup.py	/^    entry_points={$/;"	v
error	goss/app/logger.py	/^    def error(self, *msg, with_color=False):$/;"	m	class:Logger
extras_require	setup.py	/^    extras_require=EXTRAS,$/;"	v
file	goss/app/run.py	/^def file(g, ctx, repo, path, orga, method, download, output, yes):$/;"	f
filename	goss/loggers.py	/^    filename=LOGFILE,$/;"	v
filter	goss/loggers.py	/^    def filter(self, record):$/;"	m	class:CustomerFilter
finalize_options	setup.py	/^    def finalize_options(self):$/;"	m	class:UploadCommand
find_packages	setup.py	/^from setuptools import find_packages, setup, Command$/;"	i
fmt_list	goss/app/run.py	/^    def fmt_list(data):$/;"	f	function:file
format	goss/loggers.py	/^    format="[%(asctime)s] [%(levelname)-5s] [%(filename)-20s] %(message)s",$/;"	v
format_repo_pathes	goss/utils.py	/^def format_repo_pathes(filepath, path=None):$/;"	f
g	goss/git/github.py	/^    g = Github('wxnacy')$/;"	v	class:Github
g	goss/github.py	/^    g = Github(default_cred['user'], default_cred['password'])$/;"	v	class:Release
generate_path	tests/test_goss.sh	/^generate_path() {$/;"	f
generate_path	tests/test_goss_file.sh	/^generate_path() {$/;"	f
get_access_token	goss/argument/login.py	/^from goss.config import get_access_token$/;"	i
get_access_token	goss/config.py	/^def get_access_token(git_type, version=None):$/;"	f
get_access_token	goss/function.py	/^from .config import get_access_token$/;"	i
get_asset	goss/github.py	/^    def get_asset(self, owner, repo, asset_id):$/;"	m	class:Release
get_assets	goss/github.py	/^    def get_assets(self, owner, repo, release_id):$/;"	m	class:Release
get_completions_after_argument	goss/argument/command.py	/^    def get_completions_after_argument(self, word_for_completion):$/;"	m	class:CmdArgumentParser
get_completions_after_argument	goss/argument/file.py	/^    def get_completions_after_argument(self, word_for_completion):$/;"	m	class:FileArgumentParser
get_completions_after_argument	goss/argument/login.py	/^    def get_completions_after_argument(self, word_for_completion):$/;"	m	class:LoginArgumentParser
get_completions_after_cmd	goss/argument/command.py	/^    def get_completions_after_cmd(self, argument, words=None):$/;"	m	class:CmdArgumentParser
get_current_module_path	goss/cli/command.py	/^from goss.utils import get_current_module_path$/;"	i
get_current_module_path	goss/common/constants.py	/^from goss.common.utils import get_current_module_path$/;"	i
get_current_module_path	goss/common/utils.py	/^def get_current_module_path():$/;"	f
get_current_module_path	goss/constants.py	/^from goss.common.utils import get_current_module_path$/;"	i
get_current_module_path	goss/utils.py	/^def get_current_module_path():$/;"	f
get_download_url	goss/models.py	/^    def get_download_url(self, path):$/;"	m	class:Github
get_file	goss/github.py	/^    def get_file(self, owner, repository, path, ref='master'):$/;"	m	class:Github
get_file	goss/models.py	/^    def get_file(self, path):$/;"	m	class:Github
get_file_blob	goss/github.py	/^    def get_file_blob(self, owner, repository, sha, ref='master'):$/;"	m	class:Github
get_github_access_token	goss/argument/login.py	/^from goss.function import get_github_access_token$/;"	i
get_github_access_token	goss/function.py	/^def get_github_access_token():$/;"	f
get_history_by_num	goss/cli/shell.py	/^    def get_history_by_num(self, num):$/;"	m	class:Shell
get_latest_release	goss/github.py	/^    def get_latest_release(self, owner, repo):$/;"	m	class:Release
get_logger	goss/argument/command.py	/^from goss.loggers import get_logger$/;"	i
get_logger	goss/cli/command.py	/^from goss.loggers import get_logger$/;"	i
get_logger	goss/loggers.py	/^def get_logger(name):$/;"	f
get_owner_repositorys	goss/github.py	/^    def get_owner_repositorys(self):$/;"	m	class:Github
get_release	goss/github.py	/^    def get_release(self):$/;"	m	class:Github
get_release	goss/github.py	/^    def get_release(self, owner, repo, release_id):$/;"	m	class:Release
get_release_by_tag	goss/github.py	/^    def get_release_by_tag(self, owner, repo, tag_name):$/;"	m	class:Release
get_releases	goss/github.py	/^    def get_releases(self, owner, repo):$/;"	m	class:Release
get_repository	goss/github.py	/^    def get_repository(self, owner, repo):$/;"	m	class:Github
get_status	tests/test_goss.sh	/^get_status() {$/;"	f
get_status	tests/test_goss_file.sh	/^get_status() {$/;"	f
get_user_info	goss/github.py	/^    def get_user_info(self):$/;"	m	class:Github
get_value	goss/app/config.py	/^    def get_value(self, section, name):$/;"	m	class:Config
gevent	goss/app/utils.py	/^import gevent$/;"	i
github_callback	goss/cli/server.py	/^def github_callback():$/;"	f
github_credential	goss/app/run.py	/^from goss import github_credential$/;"	i
github_credential	goss/app/upload_file.py	/^from goss import github_credential$/;"	i
github_credential	goss/github.py	/^def github_credential(func):$/;"	f
goss	goss/common/constants.py	/^import goss$/;"	i
goss_config	goss/app/config.py	/^goss_config = Config(utils.GOSS_CONFIG_PATH)$/;"	v
goss_config	goss/app/run.py	/^from goss.app.config import goss_config$/;"	i
help	goss/app/release.py	/^    help = 'GET\/POST\/PUT\/DELETE for repository. Default is GET')$/;"	v
help	goss/app/run.py	/^    help = 'GET\/POST\/PUT\/DELETE for repository. Default is GET')$/;"	v
here	setup.py	/^here = os.path.abspath(os.path.dirname(__file__))$/;"	v
importlib	goss/utils.py	/^import importlib$/;"	i
include_package_data	setup.py	/^    include_package_data=True,$/;"	v
info	goss/app/logger.py	/^    def info(self, *msg):$/;"	m	class:Logger
initialize_options	setup.py	/^    def initialize_options(self):$/;"	m	class:UploadCommand
install_requires	setup.py	/^    install_requires=REQUIRED,$/;"	v
io	setup.py	/^import io$/;"	i
is_command	goss/cli/run_mode.py	/^    def is_command(self):$/;"	m	class:RunMode
is_done	goss/app/utils.py	/^    is_done = False$/;"	v	class:Progress
is_done	goss/app/utils.py	/^is_done = False$/;"	v
is_shell	goss/cli/run_mode.py	/^    def is_shell(self):$/;"	m	class:RunMode
is_waiting	goss/app/utils.py	/^    is_waiting = True$/;"	v	class:Progress
json	goss/app/release.py	/^import json$/;"	i
json	goss/app/run.py	/^import json$/;"	i
json	goss/argument/file.py	/^import json$/;"	i
json	goss/argument/login.py	/^import json$/;"	i
json	goss/git/github.py	/^    import json$/;"	i
json	goss/github.py	/^import json$/;"	i
level	goss/loggers.py	/^    level=logging.DEBUG$/;"	v
license	setup.py	/^    license='MIT',$/;"	v
lines	goss/app/utils.py	/^    lines = [$/;"	v
load_module	goss/cli/command.py	/^from goss.utils import load_module$/;"	i
load_module	goss/utils.py	/^def load_module(module_name):$/;"	f
logger	goss/app/logger.py	/^    logger = Logger()$/;"	v	class:Logger
logger	goss/app/run.py	/^logger = Logger()$/;"	v
logger	goss/app/upload_file.py	/^logger = Logger()$/;"	v
logger	goss/argument/command.py	/^    logger = get_logger('CmdArgumentParser')$/;"	v	class:CmdArgumentParser
logger	goss/cli/command.py	/^    logger = get_logger('Command')$/;"	v	class:Command
logger	goss/cli/command.py	/^logger = get_logger('main')$/;"	v
logger	goss/cli/shell.py	/^    logger = create_logger('Shell')$/;"	v	class:Shell
logger	goss/github.py	/^logger = Logger()$/;"	v
logging	goss/loggers.py	/^import logging$/;"	i
login	goss/app/run.py	/^def login(ctx, user, password, yes):$/;"	f
long_description	setup.py	/^        long_description = '\\n' + f.read()$/;"	v
long_description	setup.py	/^    long_description = DESCRIPTION$/;"	v
long_description	setup.py	/^    long_description=long_description,$/;"	v
long_description_content_type	setup.py	/^    long_description_content_type='text\/markdown',$/;"	v
main	goss/cli/command.py	/^def main():$/;"	f
make_error_msg	goss/app/utils.py	/^def make_error_msg(msg):$/;"	f
make_progress_msg	goss/app/utils.py	/^def make_progress_msg(msg):$/;"	f
mimetypes	goss/github.py	/^import mimetypes$/;"	i
mode	goss/cli/run_mode.py	/^    def mode(self):$/;"	m	class:RunMode
mp	goss/argument/login.py	/^import multiprocessing as mp$/;"	i
mp	goss/cli/shell.py	/^import multiprocessing as mp$/;"	i
name	setup.py	/^    name=NAME,$/;"	v
oauth_access_token	goss/models.py	/^    def oauth_access_token(self, code, client_id=None, client_secret=None):$/;"	m	class:Github
oauth_authorize	goss/models.py	/^    def oauth_authorize(self, client_id=None, scope=None, redirect_uri=None):$/;"	m	class:Github
os	goss/app/release.py	/^import os$/;"	i
os	goss/app/run.py	/^import os$/;"	i
os	goss/app/upload_file.py	/^import os$/;"	i
os	goss/app/utils.py	/^import os$/;"	i
os	goss/argument/file.py	/^import os$/;"	i
os	goss/argument/login.py	/^import os$/;"	i
os	goss/cli/command.py	/^import os$/;"	i
os	goss/common/constants.py	/^import os$/;"	i
os	goss/constants.py	/^import os$/;"	i
os	goss/github.py	/^import os$/;"	i
os	goss/utils.py	/^import os$/;"	i
os	setup.py	/^import os$/;"	i
owner	goss/github.py	/^    def owner(self):$/;"	m	class:Github
owner	goss/github.py	/^    owner = config['repository']['owner']$/;"	v	class:Release
packages	setup.py	/^    packages=find_packages(exclude=["gos", "tests", "*.tests", "*.tests.*", "tests.*"]),$/;"	v
parse_args	goss/argument/command.py	/^    def parse_args(self, text):$/;"	m	class:CmdArgumentParser
parser	goss/cli/shell.py	/^    parser = None$/;"	v	class:Shell
parser_dict	goss/cli/shell.py	/^    parser_dict = {}$/;"	v	class:Shell
print_data	goss/app/run.py	/^    def print_data(data):$/;"	f	function:file
print_dict	goss/app/utils.py	/^def print_dict(data, exclude=[], key_fg='magenta', val_fg=''):$/;"	f
print_dynamic_progress	goss/app/utils.py	/^    def print_dynamic_progress(self, msg = 'Waiting...'):$/;"	m	class:Progress
print_dynamic_progress	goss/app/utils.py	/^def print_dynamic_progress(msg = 'Waiting...'):$/;"	f
print_error	goss/app/utils.py	/^def print_error(msg):$/;"	f
print_failed	goss/app/utils.py	/^def print_failed(msg='Failed!'):$/;"	f
print_formatted_text	goss/argument/command.py	/^from prompt_toolkit import print_formatted_text$/;"	i
print_formatted_text	goss/cli/shell.py	/^from prompt_toolkit import print_formatted_text$/;"	i
print_list	goss/app/utils.py	/^def print_list(data, *include):$/;"	f
print_progress	goss/app/utils.py	/^def print_progress(msg='Waiting...'):$/;"	f
print_success	goss/app/utils.py	/^def print_success(msg='Success!'):$/;"	f
print_table	goss/argument/file.py	/^from wush.config.function import print_table$/;"	i
print_version	goss/app/run.py	/^def print_version(ctx, param, value):$/;"	f
project_slug	setup.py	/^    project_slug = NAME.lower().replace("-", "_").replace(" ", "_")$/;"	v
proxies	goss/git/git.py	/^    proxies = {}$/;"	v	class:Git
proxies	goss/git/github.py	/^proxies = {$/;"	v
proxy	goss/git/git.py	/^    proxy = None$/;"	v	class:Git
pygments	goss/argument/command.py	/^import pygments$/;"	i
pygments	goss/cli/shell.py	/^import pygments$/;"	i
pyperclip	goss/app/release.py	/^import pyperclip$/;"	i
pyperclip	goss/app/run.py	/^import pyperclip$/;"	i
pyperclip	goss/app/upload_file.py	/^import pyperclip$/;"	i
pyperclip	goss/argument/file.py	/^import pyperclip$/;"	i
pytest	tests/git/test_git.py	/^import pytest$/;"	i
python_requires	setup.py	/^    python_requires=REQUIRES_PYTHON,$/;"	v
r	goss/github.py	/^    r = Release(g)$/;"	v	class:Release
r1	goss/github.py	/^    r1 = r.upload_asset_from_path('wxnacy', 'test', msg[0]['id'],$/;"	v	class:Release
re	goss/app/utils.py	/^import re$/;"	i
read	goss/app/config.py	/^    def read(self, *conf_path):$/;"	m	class:ConfigParser
release	goss/app/release.py	/^def release(ctx, repo, path, orga, method, download, output, yes):$/;"	f
release	goss/app/run.py	/^def release(g, ctx, repo, id, orga, method, download, output, yes):$/;"	f
repo	goss/app/run.py	/^def repo(g, ctx, name, orga, method):$/;"	f
repo	goss/github.py	/^    repo = config['repository']['repo']$/;"	v	class:Release
repo_content	goss/git/github.py	/^    def repo_content(self, repo, path):$/;"	m	class:Github
repo_profile	goss/git/github.py	/^    def repo_profile(self, repo=None):$/;"	m	class:Github
reprlib	goss/app/run.py	/^import reprlib$/;"	i
request	goss/cli/server.py	/^from flask import request$/;"	i
requests	goss/app/release.py	/^import requests$/;"	i
requests	goss/app/run.py	/^import requests$/;"	i
requests	goss/git/git.py	/^import requests$/;"	i
requests	goss/git/github.py	/^import requests$/;"	i
requests	goss/github.py	/^import requests$/;"	i
res	goss/git/github.py	/^    res = g.repo_content('book', '2014.md')$/;"	v	class:Github
rmtree	setup.py	/^from shutil import rmtree$/;"	i
run	goss/app/run.py	/^def run(ctx, debug):$/;"	f
run	goss/app/upload_file.py	/^def run(filepath, path, repo, yes, release, name, config):$/;"	f
run	goss/argument/command.py	/^    def run(self, text):$/;"	m	class:CmdArgumentParser
run	goss/cli/command.py	/^    def run(self):$/;"	m	class:Command
run	goss/cli/shell.py	/^    def run(self):$/;"	m	class:Shell
run	setup.py	/^    def run(self):$/;"	m	class:UploadCommand
run_command	goss/argument/file.py	/^    def run_command(self, text):$/;"	m	class:FileArgumentParser
run_command	goss/argument/login.py	/^    def run_command(self, text):$/;"	m	class:LoginArgumentParser
run_command	goss/argument/shell.py	/^    def run_command(self, text):$/;"	m	class:ShellArgumentParser
run_in_shell	goss/models.py	/^from wush.cli.run import run_in_shell$/;"	i
run_server	goss/argument/login.py	/^from goss.cli.server import run_server$/;"	i
run_server	goss/cli/server.py	/^def run_server():$/;"	f
run_server	goss/cli/shell.py	/^from .server import run_server$/;"	i
run_shell	goss/argument/file.py	/^    def run_shell(self, text):$/;"	m	class:FileArgumentParser
run_shell	goss/argument/login.py	/^    def run_shell(self, text):$/;"	m	class:LoginArgumentParser
run_wush	goss/argument/login.py	/^from wush import run as run_wush$/;"	i
run_wush	goss/models.py	/^from wush.cli.run import run as run_wush$/;"	i
save_github_access_token	goss/cli/server.py	/^from goss.config import save_github_access_token$/;"	i
save_github_access_token	goss/config.py	/^def save_github_access_token(version, access_token):$/;"	f
session	goss/cli/shell.py	/^    session = None$/;"	v	class:Shell
setUp	goss/app/test_utils.py	/^    def setUp(self):$/;"	m	class:TestMain
set_command	goss/cli/run_mode.py	/^    def set_command(self):$/;"	m	class:RunMode
set_debug	goss/github.py	/^    def set_debug(self, debug: bool):$/;"	m	class:Github
set_shell	goss/cli/run_mode.py	/^    def set_shell(self):$/;"	m	class:RunMode
setup	setup.py	/^from setuptools import find_packages, setup, Command$/;"	i
status	setup.py	/^    def status(s):$/;"	m	class:UploadCommand
sys	goss/app/upload_file.py	/^import sys$/;"	i
sys	goss/cli/command.py	/^import sys$/;"	i
sys	goss/github.py	/^import sys$/;"	i
sys	setup.py	/^import sys$/;"	i
tearDown	goss/app/test_utils.py	/^    def tearDown(self):$/;"	m	class:TestMain
test	goss/cli/server.py	/^def test():$/;"	f
testCreateByUrl	tests/test_goss.sh	/^testCreateByUrl() {$/;"	f
testCreateByUrl	tests/test_goss_file.sh	/^testCreateByUrl() {$/;"	f
testCreateFile	tests/test_goss.sh	/^testCreateFile() {$/;"	f
testCreateFile	tests/test_goss_file.sh	/^testCreateFile() {$/;"	f
testCreateFileWithConfig	tests/test_goss_file.sh	/^testCreateFileWithConfig() {$/;"	f
testCreateFileWithPath	tests/test_goss_file.sh	/^testCreateFileWithPath() {$/;"	f
testUploadAsset	tests/test_goss.sh	/^testUploadAsset() {$/;"	f
test_config	goss/app/test_utils.py	/^    def test_config(self):$/;"	m	class:TestMain
test_fmt_url	tests/git/test_git.py	/^def test_fmt_url():$/;"	f
test_format_repo_pathes	tests/test_utils.py	/^def test_format_repo_pathes():$/;"	f
time	goss/app/utils.py	/^import time$/;"	i
time	goss/github.py	/^import time$/;"	i
to_dict	goss/github.py	/^    def to_dict(self):$/;"	m	class:BaseObject
to_json	goss/github.py	/^    def to_json(self):$/;"	m	class:BaseObject
traceback	goss/cli/shell.py	/^import traceback$/;"	i
unittest	goss/app/test_utils.py	/^import unittest$/;"	i
upload_asset_from_path	goss/github.py	/^    def upload_asset_from_path(self, owner, repo, release_id, path, name='',$/;"	m	class:Release
upload_file	goss/app/upload_file.py	/^def upload_file(g, owner, repo, filepath, path, is_replace):$/;"	f
upload_file	goss/argument/file.py	/^    def upload_file(self, owner, repo, path, filepath):$/;"	m	class:FileArgumentParser
url	setup.py	/^    url=URL,$/;"	v
user_options	setup.py	/^    user_options = []$/;"	v	class:UploadCommand
utils	goss/app/config.py	/^from goss.app import utils$/;"	i
utils	goss/app/release.py	/^from goss.app import utils$/;"	i
utils	goss/app/run.py	/^from goss.app import utils$/;"	i
utils	goss/app/test_utils.py	/^from goss.app import utils$/;"	i
utils	goss/app/upload_file.py	/^from goss.app import utils$/;"	i
utils	goss/argument/file.py	/^from goss import utils$/;"	i
utils	goss/github.py	/^from goss.app import utils$/;"	i
utils	tests/test_utils.py	/^from goss import utils$/;"	i
version	setup.py	/^    version=about['__version__'],$/;"	v
walkfile	goss/argument/file.py	/^from wpy.path import walkfile$/;"	i
walkfile	goss/utils.py	/^from wpy.path import walkfile$/;"	i
warn	goss/app/logger.py	/^    def warn(self, *msg, with_color=False):$/;"	m	class:Logger
web_port	goss/cli/shell.py	/^    web_port = None$/;"	v	class:Shell
work	goss/app/utils.py	/^def work():$/;"	f
wraps	goss/github.py	/^from functools import wraps$/;"	i
